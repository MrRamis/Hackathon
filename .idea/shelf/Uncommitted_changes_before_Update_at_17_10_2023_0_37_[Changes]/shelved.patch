Index: app/src/main/java/com/example/hackathon/view/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hackathon.view\r\nimport android.annotation.SuppressLint\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.foundation.BorderStroke\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Row\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.layout.width\r\nimport androidx.compose.material.icons.Icons\r\nimport androidx.compose.material.icons.filled.Menu\r\nimport androidx.compose.material3.Divider\r\nimport androidx.compose.material3.ExperimentalMaterial3Api\r\nimport androidx.compose.material3.Icon\r\nimport androidx.compose.material3.IconButton\r\nimport androidx.compose.material3.MaterialTheme\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Surface\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.material3.TopAppBar\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.compose.ui.unit.dp\r\nimport com.example.hackathon.ui.theme.HackathonTheme\r\n\r\nimport androidx.compose.material.*\r\nimport androidx.compose.material.icons.filled.Add\r\nimport androidx.compose.material.icons.materialIcon\r\nimport androidx.compose.material3.Button\r\n\r\n\r\nclass MainActivity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            HackathonTheme {\r\n                Surface(\r\n                    modifier = Modifier.fillMaxSize(),\r\n                    color = MaterialTheme.colorScheme.background\r\n                ) {\r\n\r\n                    //DefaultPreview()\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n@SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n@OptIn(ExperimentalMaterial3Api::class)\r\n@Composable\r\n\r\nfun MyScreenContent() {\r\n    Scaffold(\r\n        topBar = {\r\n            TopAppBar(\r\n\r\n                title = {\r\n                    Text(text = \"\")\r\n                },\r\n                navigationIcon ={\r\n                    Row{\r\n                        Button(onClick = {  }) {\r\n                            Text(text = \"Все\")\r\n                                //border = BorderStroke(3.dp, Color.DarkGray)\r\n                            //Icon(Icons.Default.Add, contentDescription = \"Reading\")\r\n                        }\r\n                        Button(onClick = { /* Handle navigation icon click */ }) {\r\n                            Text(text = \"read\")\r\n                        }\r\n                        //spacer()\r\n                        //Spacer(modifier = Modifier.weight(0.5f))\r\n                        Button(onClick = { /* Handle navigation icon click */ }) {\r\n                            Text(text = \"future\")\r\n                        }\r\n                        Button(onClick = { /* Handle navigation icon click */ }) {\r\n                            Text(text = \"fav\")\r\n                            //materialIcon()\r\n                        }\r\n                    }\r\n\r\n                },\r\n                actions = {\r\n                    Row(modifier = Modifier.fillMaxWidth(), horizontalArrangement = Arrangement.End) {\r\n                            Button(\r\n                                onClick = { /* Handle navigation icon click */ },\r\n                                modifier = Modifier\r\n                                    .width(85.dp) // specify the desired width\r\n                                    .padding(13.dp) // optional padding\r\n                            ) {\r\n                                Icon(Icons.Default.Add, contentDescription = \"Menu\")\r\n\r\n                            }\r\n                        Button(onClick = { /* Handle navigation icon click */ },\r\n                                modifier = Modifier\r\n                                .width(85.dp) // specify the desired width\r\n                                .padding(13.dp) // optional padding\r\n                        ) {\r\n//                            Box(Modifier.padding(8.dp)){\r\n//                                Text(text =\"Tvft\")\r\n//                            }\r\n                            Icon(Icons.Default.Add, contentDescription = \"add\")\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                }\r\n\r\n            )\r\n        },\r\n        content = {\r\n            Column {\r\n\r\n                Divider()\r\n                NameList(names = listOf(\"Alice\", \"Bob\", \"Charlie\"))\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n\r\n@Composable\r\nfun Spacer(weight: Modifier) {\r\n\r\n}\r\n\r\n\r\n\r\n@Composable\r\nfun NameList(names: List<String>) {\r\n    Column {\r\n        for (name in names) {\r\n            Text(text = name, modifier = Modifier.padding(16.dp))\r\n        }\r\n    }\r\n}\r\n\r\n@Preview\r\n@Composable\r\nfun DefaultPreview() {\r\n    MyScreenContent()\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hackathon/view/MainActivity.kt b/app/src/main/java/com/example/hackathon/view/MainActivity.kt
--- a/app/src/main/java/com/example/hackathon/view/MainActivity.kt	(revision 193ce42dcb6c619e08ae826d53335d63f47fb6f0)
+++ b/app/src/main/java/com/example/hackathon/view/MainActivity.kt	(date 1697492185679)
@@ -29,8 +29,11 @@
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import com.example.hackathon.ui.theme.HackathonTheme
+import kotlinx.coroutines.delay
+import androidx.compose.animation.core.animateFloatAsState
 
 import androidx.compose.material.*
+import androidx.compose.runtime.*
 import androidx.compose.material.icons.filled.Add
 import androidx.compose.material.icons.materialIcon
 import androidx.compose.material3.Button
@@ -61,6 +64,7 @@
 @Composable
 
 fun MyScreenContent() {
+    val windowAlpha: Float by animateFloatAsState(if (isWindowOpen) 1f else 0f)
     Scaffold(
         topBar = {
             TopAppBar(
@@ -69,14 +73,14 @@
                     Text(text = "")
                 },
                 navigationIcon ={
-                    Row{
+                    Row(modifier = Modifier.fillMaxWidth(), horizontalArrangement = Arrangement.Start){
                         Button(onClick = {  }) {
-                            Text(text = "Все")
+                            Text(text = "All")
                                 //border = BorderStroke(3.dp, Color.DarkGray)
                             //Icon(Icons.Default.Add, contentDescription = "Reading")
                         }
                         Button(onClick = { /* Handle navigation icon click */ }) {
-                            Text(text = "read")
+                            Text(text = "Reading")
                         }
                         //spacer()
                         //Spacer(modifier = Modifier.weight(0.5f))
@@ -92,24 +96,24 @@
                 },
                 actions = {
                     Row(modifier = Modifier.fillMaxWidth(), horizontalArrangement = Arrangement.End) {
-                            Button(
+                            IconButton(
                                 onClick = { /* Handle navigation icon click */ },
-                                modifier = Modifier
-                                    .width(85.dp) // specify the desired width
-                                    .padding(13.dp) // optional padding
+//                                modifier = Modifier
+//                                    .width(85.dp) // specify the desired width
+//                                    .padding(13.dp) // optional padding
                             ) {
-                                Icon(Icons.Default.Add, contentDescription = "Menu")
+                                Icon(Icons.Default.Add, contentDescription = "Author")
 
                             }
-                        Button(onClick = { /* Handle navigation icon click */ },
-                                modifier = Modifier
-                                .width(85.dp) // specify the desired width
-                                .padding(13.dp) // optional padding
+                        IconButton(onClick = { /* Handle navigation icon click */ },
+//                                modifier = Modifier
+//                                .width(85.dp) // specify the desired width
+//                                .padding(13.dp) // optional padding
                         ) {
 //                            Box(Modifier.padding(8.dp)){
 //                                Text(text ="Tvft")
 //                            }
-                            Icon(Icons.Default.Add, contentDescription = "add")
+                            Icon(Icons.Default.Add, contentDescription = "Books")
 
 
                         }
@@ -122,14 +126,19 @@
             )
         },
         content = {
-            Column {
+            Column(Modifier.fillMaxSize()) {
 
                 Divider()
-                NameList(names = listOf("Alice", "Bob", "Charlie"))
+                if(isWindowOpen)
+                NameList(names = listOf("Alice", "Charlie"))
             }
         }
     )
 }
+
+
+
+
 
 
 @Composable
Index: app/src/main/java/com/example/hackathon/view/Author.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hackathon/view/Author.kt b/app/src/main/java/com/example/hackathon/view/Author.kt
new file mode 100644
--- /dev/null	(date 1697491637618)
+++ b/app/src/main/java/com/example/hackathon/view/Author.kt	(date 1697491637618)
@@ -0,0 +1,4 @@
+package com.example.hackathon.view
+
+class Author {
+}
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    id 'com.android.application' version '8.0.2' apply false\r\n    id 'com.android.library' version '8.0.2' apply false\r\n    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 193ce42dcb6c619e08ae826d53335d63f47fb6f0)
+++ b/build.gradle	(date 1697489372593)
@@ -1,6 +1,6 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 plugins {
-    id 'com.android.application' version '8.0.2' apply false
-    id 'com.android.library' version '8.0.2' apply false
+    id 'com.android.application' version '8.1.2' apply false
+    id 'com.android.library' version '8.1.2' apply false
     id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
 }
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n\r\n    id 'kotlin-kapt'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.hackathon'\r\n    compileSdk 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.hackathon\"\r\n        minSdk 24\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables {\r\n            useSupportLibrary true\r\n        }\r\n\r\n        kapt {\r\n            arguments {arg(\"room.schemaLocation\", \"$projectDir/schemas\")}\r\n        }\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        compose true\r\n    }\r\n    composeOptions {\r\n        kotlinCompilerExtensionVersion '1.3.2'\r\n    }\r\n    packagingOptions {\r\n        resources {\r\n            excludes += '/META-INF/{AL2.0,LGPL2.1}'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation 'androidx.core:core-ktx:1.8.0'\r\n\r\n    //implementation 'androidx.room:room-compiler:2.5.2'\r\n    implementation 'androidx.room:room-ktx:2.5.2'\r\n    //kapt 'androidx.room:room-compiler:2.5.2'\r\n\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'\r\n\r\n    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')\r\n   // implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'\r\n    implementation 'androidx.activity:activity-compose:1.5.1'\r\n    implementation platform('androidx.compose:compose-bom:2022.10.00')\r\n    implementation 'androidx.compose.ui:ui'\r\n    implementation 'androidx.compose.ui:ui-graphics'\r\n    implementation 'androidx.compose.ui:ui-tooling-preview'\r\n    implementation 'androidx.compose.material3:material3'\r\n\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')\r\n    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'\r\n    debugImplementation 'androidx.compose.ui:ui-tooling'\r\n    debugImplementation 'androidx.compose.ui:ui-test-manifest'\r\n\r\n\r\n    implementation 'androidx.room:room-runtime:2.5.2' // Библиотека \"Room\"\r\n    kapt \"androidx.room:room-compiler:2.5.2\" // Кодогенератор\r\n    implementation 'androidx.room:room-ktx:2.5.2' // Дополнительно для Kotlin Coroutines, Kotlin Flows\r\n\r\n    implementation 'androidx.navigation:navigation-compose:2.7.4'\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 193ce42dcb6c619e08ae826d53335d63f47fb6f0)
+++ b/app/build.gradle	(date 1697489294215)
@@ -7,12 +7,12 @@
 
 android {
     namespace 'com.example.hackathon'
-    compileSdk 33
+    compileSdk 34
 
     defaultConfig {
         applicationId "com.example.hackathon"
         minSdk 24
-        targetSdk 33
+        targetSdk 34
         versionCode 1
         versionName "1.0"
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 193ce42dcb6c619e08ae826d53335d63f47fb6f0)
+++ b/.idea/misc.xml	(date 1697491229333)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
